1.아래의 List 객체에서 순차적 접근방법 3가지로 출력하시오.	(7분)
-list가 가지는 get
-enhenced for
-iterator 객체

   List<String> list = new LinkedList<>();   
   
   // 컬렉션 인스턴스에 문자열 인스턴스 저장
   list.add("Toy");
   list.add("Box");
   list.add("Robot");
=============

[ListTest.java]

package test0611;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class ListTest {

	public static void main(String[] args) {
		List<String> list = new LinkedList<>();

		// 컬렉션 인스턴스에 문자열 인스턴스 저장
		list.add("Toy");
		list.add("Box");
		list.add("Robot");

		// 1. list - get
		for (int i = 0; i < list.size(); i++) {
			System.out.print(list.get(i) + '\t');
		}
		System.out.println();

		// 2. enhenced for
		for (String l : list) {
			System.out.print(l + '\t');
		}
		System.out.println();

		// 3. iterator
		for (Iterator<String> itr = list.iterator(); itr.hasNext();) {
			System.out.print(itr.next().toString() + '\t');
		}
	}

}

==console==
Toy	Box	Robot	
Toy	Box	Robot	
Toy	Box	Robot	

2. hasSet을 이용하여 로또 번호를 뽑아내시오.	(10분)

[HashSetLotto.java] https://gusfree.tistory.com/245

package test0611;

import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

public class HashSetLotto {

	public static void main(String[] args) {
		Set<Integer> set = new HashSet<>();
		
		while(set.size()<6) {
			int num= (int)(Math.random()*45)+1;
			System.out.println(num);
			set.add(new Integer(num));
		}
		
		//데이터를 정렬하기 위해 Set-> List
		List<Integer> list = new LinkedList<>(set);
		
		//데이터 정렬
		Collections.sort(list);
		
		System.out.println(list);

	}

}
3. 폼태그	(10분)

4. 아래를 인스턴스 수가 2가 나오도록 수정하시오.      (10분)
        HashSet<Num> set = new HashSet<>();
        
        set.add(new Num(7799));
        set.add(new Num(9955));
        set.add(new Num(7799));

        System.out.println("인스턴스 수: " + set.size());


[HashSetEqualityTwo.java]

package test0611;

import java.util.HashSet;

public class HashSetEqualityTwo {

	public static void main(String[] args) {
		HashSet<Num> set = new HashSet<>();

		set.add(new Num(7799));
		set.add(new Num(9955));
		set.add(new Num(7799));

		System.out.println("인스턴스 수: " + set.size());
		
		for(Num n : set) {
			System.out.print(n.toString()+'\t');
		}System.out.println();
	}

}

class Num {
	private int num;

	public Num(int n) {
		num = n;
	}

	@Override
	public String toString() {
		return String.valueOf(num);
	}

	@Override
	public int hashCode() {
		return num % 3;
	}

	@Override
	public boolean equals(Object obj) {
		if (num == ((Num) obj).num) {
			return true;
		} else {
			return false;
		}
	}

}

==console==
인스턴스 수: 2
9955	7799	